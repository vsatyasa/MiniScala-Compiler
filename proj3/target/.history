run "val x : Int = 12; x"
run "val x : Boolean = 12; x"
run "val x : Boolean = false; x"
run "val x : Boolean = False; x"
run "val x = 10; if (x > 1) x = x + 5 "
run "var x = 10; if (x > 1) x = x + 5 "
run "var x = 10; if (x > 1) x = x + 5; val y = 10; y"
run "def f(x: Int, k: Int => Int): Int = h(x);"
run "def f(): Int = h(x);"
run "def f(x: Int, k: Int => Int): Int = h(x);"
run "def f(x: Int, k: Int => Int): Int = 1;"
run "func(1)(2,3)"
run "func(1)(2,3);"
run "func(i)(2,3);"
run "val i=1; func(i)(2,3);"
run "def f(x: Int, k: Int => Int): Int = 1;"
run "def f(x: Int, k: Int => Int): Int = 1"
run "def f(x: Int, k: Int => Int): Int = {1};1"
run "def f(x: Int, k: Int => Int): Int = 1;1"
run "def f(x: Int, k: Int => Int): Int = 1; def g(x: Int, k: Int => Int): Int = 1; 1"
run "def f(x: Int, k: Int => Int): Int = 1; val x = new Array[Int](5); x(2) = 4; x(2)"
run "def f(x: Int, k: Int => Int): Int = 1; val x = new Array[Int](5);  x(2)"
run "def f(x: Int, k: Int => Int): Int = 1; val x = new Array[Int](5);  x(2) = 1; 1"
run "def f(x: Int, k: Int => Int): Int = 1; val x = new Array[Int](5)"
run "val x = new Array[Int](5); x(2)"
run "val x = new Array[Int](5); x(2) = 1; x(2)"
run "x(2)"
run "val x = new Array[Int](5); x(2) = 1; x(2)"
run "def f(x: Int, k: Int => Int): Int = 1; val x = new Array[Int](5); x(1) = 2;x(3)"
run "def f(k: Int => Int): Int = 1; 1"
run "1+2"
run "val a = new Array[Int](5); a(0) = 2; a(0)"
run "val a = new Array[Int](5); a(0) = 4; a(0)"
run "val a = new Array[Int](5); a(0) = 4; a(0) + 1"
run "val a = new Array[Int](5); a(0) = 4; a(2) + 1"
run "val a = new Array[Int](5); a(2) = 4; a(2) + 1"
run "def f(a: Int) => a + 20; f(1)"
run "def f(a: Int) = a + 20; f(1)"
run "def f(a: Int) = a + 20; f(1,2)"
run "def f(a: Int) = a + 20; f()"
run "def f(a: eee) = a + 20; f()"
run "def f(a: Int) = a + 20; f()"
run "def f(a: Int) = a + 20; f(1)"
run "def f(a: Int) = a + 20; f()"
run "def f(a: Int) = a + 20; f(1,2)"
run "def f(a: Int) = a + 20; f(2)"
run "1+ 2"
run "1+ 2" intStack
run "val x = new Array[Int](5); x(2) = 5; x(2)" intStack
run "def x(a: Int) = a + 20 / 10; x(2)" intStack
run "def x(a: Int) = (a + 20) / 10; x(2)" intStack
run "def x(a: Int, b: Int) = (a * b * 4 + 20) / 10; x(2,2)" intStack
run "val x = new Array[Int](5); x(2) = 5; x(2)" intStack
run "def x(a: Int, b: Int) = (a * b * 4 + 20) / 10; x(2,2)" intStack
run "val x = new Array[Int](5); x(2) = 5; x(2)" intStack
run "def x(a: Int, b: Int) = (a * b * 4 + 20) / 10; x(2,2)" intStack
run "val x = new Array[Int](5); x(2) = 5; x(2)" intStack
run "def x(a: Int) = a + 20 / 10; x(2)" intStack
run "val x = new Array[Int](5); x(2) = 5; x(2)" intStack
run "val x = 2; x = x + 1; x"
run "var x = 2; x = x + 1; x"
run "var x = 2; x =  1; x"
run "var x = 2; x =  x + 1; x"
run "var x = 2; if (x > 1) x = x + 10; x"
runrun 
run "var x = 2; if (x > 1) x = x + 10; x"
run "var x = 2; if (x == 1) x = x + 10; x"
run "var x = 2; if (x > 1) x = x + 10; x"
run "var x = 2; if (x >= 2) x = x + 10; x"
run "var x = 2; if (x <= 2) x = x + 10; x"
run "var x = 2; if (x < 2) x = x + 10; x"
run "var x = 2; if (x > 2) x = x + 10; x"
run "def f(i: Int) = i; f(2)"
run "def f(i: Int): Int = h(i); def h(i: Int) = i * i; f(2)"
run "def f(i: Int): Int = h(i); def h(i: Int): Int = i * i; f(2)"
run "def f(i: Int => Int): Int = h(i); 2"
run "val x = new Array[Int](5); x(2) = 5; x(2)"
run "val g: (Int => Int) => Int = 3; g" intStack
run "def f(i: Int): Int = h(i); def h(i: Int): Int = i * i; f(2)" intStack
run "val x = new Array[Int](5); x(2) = 5; x(2)"
run "val x = new Array[Int](5); x(2) = 5; x(2)" intStack
run "def f(): Int = 10; f()"
run "def f(): Int = 10; f()" intStack
run "def f(): Int = 10; def f(): Int =20; f()" intStack
run "def f(): Int = 10; def f(): Int =20; f(1)" intStack
run "def f() = 5;f()"
run "def f(x: Int, x: Int) = 5;f()"
exit
run "def f(x: Int, x: Int) = 5;f()"
run "def f() = 5;f()"
run "def f(): Boolean = 5;f()"
run "val x = 5; if(x>0){x}else{x-1}"
run "def f(): Boolean = 5;f()"
run "def f(x: Unit): Int = 5;f()"
run "def f(x: Unit): Int = 5;f(1)"
run "def f(x: Unity): Int = 5;f(1)"
run "var x: Boolean = 20"
run "var x: Boolean = 20; x"
run "def f(x: Int, x:Int) = 5; f(2,2)"
run "def f() = 5; def f() = 10; f()"
run "val x = new Array[Boolean](2); x(1) = 2; x(1)"
run "val x = new Array[Int](5); x(1) = 5; x(1)"
run "val x = if (2 > 1) 6; x"
run "val x = if (2 > 1) 6 else 2; x"
run "val x = if (2 > 1) 6; x"
run "var x = 2; if (2 > 1) x = x + 1; x"
run "var x = if (6 > 2) 3 else 2; x"
"val x = 1; while (1 > 2) 1; x"
"val x = 1; while (1 > 2) { 1 }; x"
run "val x = 1; while (1 > 2) { 1 }; x"
run "var x = 1; while (1 > 2) { x = 1 }; x"
